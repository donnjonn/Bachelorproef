
GccApplication2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003a  00800100  00000830  000008c4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000830  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000003  0080013a  0080013a  000008fe  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000008fe  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000930  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000b0  00000000  00000000  0000096c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001361  00000000  00000000  00000a1c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000081b  00000000  00000000  00001d7d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000007b6  00000000  00000000  00002598  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001d4  00000000  00000000  00002d50  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000533  00000000  00000000  00002f24  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000008ee  00000000  00000000  00003457  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a0  00000000  00000000  00003d45  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 76 02 	jmp	0x4ec	; 0x4ec <__vector_1>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 88 02 	jmp	0x510	; 0x510 <__vector_9>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e0 e3       	ldi	r30, 0x30	; 48
  7c:	f8 e0       	ldi	r31, 0x08	; 8
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	aa 33       	cpi	r26, 0x3A	; 58
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	aa e3       	ldi	r26, 0x3A	; 58
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ad 33       	cpi	r26, 0x3D	; 61
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 60 02 	call	0x4c0	; 0x4c0 <main>
  9e:	0c 94 16 04 	jmp	0x82c	; 0x82c <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <lcd_write_4>:
	EIMSK |= (1 << INT0); //Enable INT0
}

void Timer2_Init(void)
{
	TCNT2=0x00;
  a6:	5f 98       	cbi	0x0b, 7	; 11
  a8:	88 23       	and	r24, r24
  aa:	0c f4       	brge	.+2      	; 0xae <lcd_write_4+0x8>
  ac:	5f 9a       	sbi	0x0b, 7	; 11
  ae:	5e 98       	cbi	0x0b, 6	; 11
  b0:	86 fd       	sbrc	r24, 6
  b2:	5e 9a       	sbi	0x0b, 6	; 11
  b4:	5d 98       	cbi	0x0b, 5	; 11
  b6:	85 fd       	sbrc	r24, 5
  b8:	5d 9a       	sbi	0x0b, 5	; 11
  ba:	5c 98       	cbi	0x0b, 4	; 11
  bc:	84 fd       	sbrc	r24, 4
  be:	5c 9a       	sbi	0x0b, 4	; 11
  c0:	2d 9a       	sbi	0x05, 5	; 5
  c2:	85 e0       	ldi	r24, 0x05	; 5
  c4:	8a 95       	dec	r24
  c6:	f1 f7       	brne	.-4      	; 0xc4 <lcd_write_4+0x1e>
  c8:	00 00       	nop
  ca:	2d 98       	cbi	0x05, 5	; 5
  cc:	85 e0       	ldi	r24, 0x05	; 5
  ce:	8a 95       	dec	r24
  d0:	f1 f7       	brne	.-4      	; 0xce <lcd_write_4+0x28>
  d2:	00 00       	nop
  d4:	08 95       	ret

000000d6 <lcd_write_character_4d>:
  d6:	cf 93       	push	r28
  d8:	df 93       	push	r29
  da:	28 9a       	sbi	0x05, 0	; 5
  dc:	2d 98       	cbi	0x05, 5	; 5
  de:	c8 2f       	mov	r28, r24
  e0:	d0 e0       	ldi	r29, 0x00	; 0
  e2:	ce 01       	movw	r24, r28
  e4:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_write_4>
  e8:	ce 01       	movw	r24, r28
  ea:	82 95       	swap	r24
  ec:	92 95       	swap	r25
  ee:	90 7f       	andi	r25, 0xF0	; 240
  f0:	98 27       	eor	r25, r24
  f2:	80 7f       	andi	r24, 0xF0	; 240
  f4:	98 27       	eor	r25, r24
  f6:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_write_4>
  fa:	df 91       	pop	r29
  fc:	cf 91       	pop	r28
  fe:	08 95       	ret

00000100 <lcd_write_string_4d>:
 100:	0f 93       	push	r16
 102:	1f 93       	push	r17
 104:	cf 93       	push	r28
 106:	df 93       	push	r29
 108:	00 d0       	rcall	.+0      	; 0x10a <lcd_write_string_4d+0xa>
 10a:	cd b7       	in	r28, 0x3d	; 61
 10c:	de b7       	in	r29, 0x3e	; 62
 10e:	8c 01       	movw	r16, r24
 110:	1a 82       	std	Y+2, r1	; 0x02
 112:	19 82       	std	Y+1, r1	; 0x01
 114:	e9 81       	ldd	r30, Y+1	; 0x01
 116:	fa 81       	ldd	r31, Y+2	; 0x02
 118:	e8 0f       	add	r30, r24
 11a:	f9 1f       	adc	r31, r25
 11c:	80 81       	ld	r24, Z
 11e:	88 23       	and	r24, r24
 120:	d1 f0       	breq	.+52     	; 0x156 <lcd_write_string_4d+0x56>
 122:	e9 81       	ldd	r30, Y+1	; 0x01
 124:	fa 81       	ldd	r31, Y+2	; 0x02
 126:	e0 0f       	add	r30, r16
 128:	f1 1f       	adc	r31, r17
 12a:	80 81       	ld	r24, Z
 12c:	90 e0       	ldi	r25, 0x00	; 0
 12e:	0e 94 6b 00 	call	0xd6	; 0xd6 <lcd_write_character_4d>
 132:	89 81       	ldd	r24, Y+1	; 0x01
 134:	9a 81       	ldd	r25, Y+2	; 0x02
 136:	01 96       	adiw	r24, 0x01	; 1
 138:	9a 83       	std	Y+2, r25	; 0x02
 13a:	89 83       	std	Y+1, r24	; 0x01
 13c:	8f e3       	ldi	r24, 0x3F	; 63
 13e:	91 e0       	ldi	r25, 0x01	; 1
 140:	01 97       	sbiw	r24, 0x01	; 1
 142:	f1 f7       	brne	.-4      	; 0x140 <lcd_write_string_4d+0x40>
 144:	00 c0       	rjmp	.+0      	; 0x146 <lcd_write_string_4d+0x46>
 146:	00 00       	nop
 148:	e9 81       	ldd	r30, Y+1	; 0x01
 14a:	fa 81       	ldd	r31, Y+2	; 0x02
 14c:	e0 0f       	add	r30, r16
 14e:	f1 1f       	adc	r31, r17
 150:	80 81       	ld	r24, Z
 152:	81 11       	cpse	r24, r1
 154:	e6 cf       	rjmp	.-52     	; 0x122 <lcd_write_string_4d+0x22>
 156:	0f 90       	pop	r0
 158:	0f 90       	pop	r0
 15a:	df 91       	pop	r29
 15c:	cf 91       	pop	r28
 15e:	1f 91       	pop	r17
 160:	0f 91       	pop	r16
 162:	08 95       	ret

00000164 <lcd_write_instruction_4d>:
 164:	cf 93       	push	r28
 166:	df 93       	push	r29
 168:	28 98       	cbi	0x05, 0	; 5
 16a:	2d 98       	cbi	0x05, 5	; 5
 16c:	c8 2f       	mov	r28, r24
 16e:	d0 e0       	ldi	r29, 0x00	; 0
 170:	ce 01       	movw	r24, r28
 172:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_write_4>
 176:	ce 01       	movw	r24, r28
 178:	82 95       	swap	r24
 17a:	92 95       	swap	r25
 17c:	90 7f       	andi	r25, 0xF0	; 240
 17e:	98 27       	eor	r25, r24
 180:	80 7f       	andi	r24, 0xF0	; 240
 182:	98 27       	eor	r25, r24
 184:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_write_4>
 188:	df 91       	pop	r29
 18a:	cf 91       	pop	r28
 18c:	08 95       	ret

0000018e <lcd_init_4d>:
 18e:	2f ef       	ldi	r18, 0xFF	; 255
 190:	81 ee       	ldi	r24, 0xE1	; 225
 192:	94 e0       	ldi	r25, 0x04	; 4
 194:	21 50       	subi	r18, 0x01	; 1
 196:	80 40       	sbci	r24, 0x00	; 0
 198:	90 40       	sbci	r25, 0x00	; 0
 19a:	e1 f7       	brne	.-8      	; 0x194 <lcd_init_4d+0x6>
 19c:	00 c0       	rjmp	.+0      	; 0x19e <lcd_init_4d+0x10>
 19e:	00 00       	nop
 1a0:	28 98       	cbi	0x05, 0	; 5
 1a2:	2d 98       	cbi	0x05, 5	; 5
 1a4:	80 e3       	ldi	r24, 0x30	; 48
 1a6:	90 e0       	ldi	r25, 0x00	; 0
 1a8:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_write_4>
 1ac:	8f e3       	ldi	r24, 0x3F	; 63
 1ae:	9c e9       	ldi	r25, 0x9C	; 156
 1b0:	01 97       	sbiw	r24, 0x01	; 1
 1b2:	f1 f7       	brne	.-4      	; 0x1b0 <lcd_init_4d+0x22>
 1b4:	00 c0       	rjmp	.+0      	; 0x1b6 <lcd_init_4d+0x28>
 1b6:	00 00       	nop
 1b8:	80 e3       	ldi	r24, 0x30	; 48
 1ba:	90 e0       	ldi	r25, 0x00	; 0
 1bc:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_write_4>
 1c0:	8f e1       	ldi	r24, 0x1F	; 31
 1c2:	93 e0       	ldi	r25, 0x03	; 3
 1c4:	01 97       	sbiw	r24, 0x01	; 1
 1c6:	f1 f7       	brne	.-4      	; 0x1c4 <lcd_init_4d+0x36>
 1c8:	00 c0       	rjmp	.+0      	; 0x1ca <lcd_init_4d+0x3c>
 1ca:	00 00       	nop
 1cc:	80 e3       	ldi	r24, 0x30	; 48
 1ce:	90 e0       	ldi	r25, 0x00	; 0
 1d0:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_write_4>
 1d4:	8f e1       	ldi	r24, 0x1F	; 31
 1d6:	93 e0       	ldi	r25, 0x03	; 3
 1d8:	01 97       	sbiw	r24, 0x01	; 1
 1da:	f1 f7       	brne	.-4      	; 0x1d8 <lcd_init_4d+0x4a>
 1dc:	00 c0       	rjmp	.+0      	; 0x1de <lcd_init_4d+0x50>
 1de:	00 00       	nop
 1e0:	88 e2       	ldi	r24, 0x28	; 40
 1e2:	90 e0       	ldi	r25, 0x00	; 0
 1e4:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_write_4>
 1e8:	8f e3       	ldi	r24, 0x3F	; 63
 1ea:	91 e0       	ldi	r25, 0x01	; 1
 1ec:	01 97       	sbiw	r24, 0x01	; 1
 1ee:	f1 f7       	brne	.-4      	; 0x1ec <lcd_init_4d+0x5e>
 1f0:	00 c0       	rjmp	.+0      	; 0x1f2 <lcd_init_4d+0x64>
 1f2:	00 00       	nop
 1f4:	88 e2       	ldi	r24, 0x28	; 40
 1f6:	90 e0       	ldi	r25, 0x00	; 0
 1f8:	0e 94 b2 00 	call	0x164	; 0x164 <lcd_write_instruction_4d>
 1fc:	8f e3       	ldi	r24, 0x3F	; 63
 1fe:	91 e0       	ldi	r25, 0x01	; 1
 200:	01 97       	sbiw	r24, 0x01	; 1
 202:	f1 f7       	brne	.-4      	; 0x200 <lcd_init_4d+0x72>
 204:	00 c0       	rjmp	.+0      	; 0x206 <lcd_init_4d+0x78>
 206:	00 00       	nop
 208:	88 e0       	ldi	r24, 0x08	; 8
 20a:	90 e0       	ldi	r25, 0x00	; 0
 20c:	0e 94 b2 00 	call	0x164	; 0x164 <lcd_write_instruction_4d>
 210:	8f e3       	ldi	r24, 0x3F	; 63
 212:	91 e0       	ldi	r25, 0x01	; 1
 214:	01 97       	sbiw	r24, 0x01	; 1
 216:	f1 f7       	brne	.-4      	; 0x214 <lcd_init_4d+0x86>
 218:	00 c0       	rjmp	.+0      	; 0x21a <lcd_init_4d+0x8c>
 21a:	00 00       	nop
 21c:	81 e0       	ldi	r24, 0x01	; 1
 21e:	90 e0       	ldi	r25, 0x00	; 0
 220:	0e 94 b2 00 	call	0x164	; 0x164 <lcd_write_instruction_4d>
 224:	8f e7       	ldi	r24, 0x7F	; 127
 226:	9e e3       	ldi	r25, 0x3E	; 62
 228:	01 97       	sbiw	r24, 0x01	; 1
 22a:	f1 f7       	brne	.-4      	; 0x228 <lcd_init_4d+0x9a>
 22c:	00 c0       	rjmp	.+0      	; 0x22e <lcd_init_4d+0xa0>
 22e:	00 00       	nop
 230:	86 e0       	ldi	r24, 0x06	; 6
 232:	90 e0       	ldi	r25, 0x00	; 0
 234:	0e 94 b2 00 	call	0x164	; 0x164 <lcd_write_instruction_4d>
 238:	8f e3       	ldi	r24, 0x3F	; 63
 23a:	91 e0       	ldi	r25, 0x01	; 1
 23c:	01 97       	sbiw	r24, 0x01	; 1
 23e:	f1 f7       	brne	.-4      	; 0x23c <lcd_init_4d+0xae>
 240:	00 c0       	rjmp	.+0      	; 0x242 <lcd_init_4d+0xb4>
 242:	00 00       	nop
 244:	8c e0       	ldi	r24, 0x0C	; 12
 246:	90 e0       	ldi	r25, 0x00	; 0
 248:	0e 94 b2 00 	call	0x164	; 0x164 <lcd_write_instruction_4d>
 24c:	8f e3       	ldi	r24, 0x3F	; 63
 24e:	91 e0       	ldi	r25, 0x01	; 1
 250:	01 97       	sbiw	r24, 0x01	; 1
 252:	f1 f7       	brne	.-4      	; 0x250 <lcd_init_4d+0xc2>
 254:	00 c0       	rjmp	.+0      	; 0x256 <lcd_init_4d+0xc8>
 256:	00 00       	nop
 258:	08 95       	ret

0000025a <RotaryInit>:
 25a:	87 b1       	in	r24, 0x07	; 7
 25c:	88 7f       	andi	r24, 0xF8	; 248
 25e:	87 b9       	out	0x07, r24	; 7
 260:	88 b1       	in	r24, 0x08	; 8
 262:	87 60       	ori	r24, 0x07	; 7
 264:	88 b9       	out	0x08, r24	; 8
 266:	08 95       	ret

00000268 <RotaryCheckStatus>:
 268:	86 b1       	in	r24, 0x06	; 6
 26a:	96 b1       	in	r25, 0x06	; 6
 26c:	80 fd       	sbrc	r24, 0
 26e:	0a c0       	rjmp	.+20     	; 0x284 <RotaryCheckStatus+0x1c>
 270:	91 ff       	sbrs	r25, 1
 272:	08 c0       	rjmp	.+16     	; 0x284 <RotaryCheckStatus+0x1c>
 274:	30 9b       	sbis	0x06, 0	; 6
 276:	fe cf       	rjmp	.-4      	; 0x274 <RotaryCheckStatus+0xc>
 278:	31 99       	sbic	0x06, 1	; 6
 27a:	23 c0       	rjmp	.+70     	; 0x2c2 <RotaryCheckStatus+0x5a>
 27c:	81 e0       	ldi	r24, 0x01	; 1
 27e:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <rotarystatus>
 282:	08 95       	ret
 284:	86 b1       	in	r24, 0x06	; 6
 286:	96 b1       	in	r25, 0x06	; 6
 288:	81 fd       	sbrc	r24, 1
 28a:	0a c0       	rjmp	.+20     	; 0x2a0 <RotaryCheckStatus+0x38>
 28c:	90 ff       	sbrs	r25, 0
 28e:	08 c0       	rjmp	.+16     	; 0x2a0 <RotaryCheckStatus+0x38>
 290:	31 9b       	sbis	0x06, 1	; 6
 292:	fe cf       	rjmp	.-4      	; 0x290 <RotaryCheckStatus+0x28>
 294:	30 99       	sbic	0x06, 0	; 6
 296:	15 c0       	rjmp	.+42     	; 0x2c2 <RotaryCheckStatus+0x5a>
 298:	82 e0       	ldi	r24, 0x02	; 2
 29a:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <rotarystatus>
 29e:	08 95       	ret
 2a0:	86 b1       	in	r24, 0x06	; 6
 2a2:	96 b1       	in	r25, 0x06	; 6
 2a4:	80 fd       	sbrc	r24, 0
 2a6:	0d c0       	rjmp	.+26     	; 0x2c2 <RotaryCheckStatus+0x5a>
 2a8:	91 fd       	sbrc	r25, 1
 2aa:	0b c0       	rjmp	.+22     	; 0x2c2 <RotaryCheckStatus+0x5a>
 2ac:	30 9b       	sbis	0x06, 0	; 6
 2ae:	fe cf       	rjmp	.-4      	; 0x2ac <RotaryCheckStatus+0x44>
 2b0:	31 99       	sbic	0x06, 1	; 6
 2b2:	04 c0       	rjmp	.+8      	; 0x2bc <RotaryCheckStatus+0x54>
 2b4:	81 e0       	ldi	r24, 0x01	; 1
 2b6:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <rotarystatus>
 2ba:	08 95       	ret
 2bc:	82 e0       	ldi	r24, 0x02	; 2
 2be:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <rotarystatus>
 2c2:	08 95       	ret

000002c4 <setPWM>:
 2c4:	94 b1       	in	r25, 0x04	; 4
 2c6:	96 60       	ori	r25, 0x06	; 6
 2c8:	94 b9       	out	0x04, r25	; 4
 2ca:	2f ef       	ldi	r18, 0xFF	; 255
 2cc:	3f ef       	ldi	r19, 0xFF	; 255
 2ce:	30 93 87 00 	sts	0x0087, r19	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
 2d2:	20 93 86 00 	sts	0x0086, r18	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
 2d6:	68 2f       	mov	r22, r24
 2d8:	70 e0       	ldi	r23, 0x00	; 0
 2da:	76 2f       	mov	r23, r22
 2dc:	66 27       	eor	r22, r22
 2de:	07 2e       	mov	r0, r23
 2e0:	00 0c       	add	r0, r0
 2e2:	88 0b       	sbc	r24, r24
 2e4:	99 0b       	sbc	r25, r25
 2e6:	0e 94 dd 02 	call	0x5ba	; 0x5ba <__floatsisf>
 2ea:	23 e3       	ldi	r18, 0x33	; 51
 2ec:	33 e3       	ldi	r19, 0x33	; 51
 2ee:	43 e2       	ldi	r20, 0x23	; 35
 2f0:	50 e4       	ldi	r21, 0x40	; 64
 2f2:	0e 94 41 03 	call	0x682	; 0x682 <__mulsf3>
 2f6:	0e 94 ac 02 	call	0x558	; 0x558 <__fixunssfsi>
 2fa:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 2fe:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 302:	e0 e8       	ldi	r30, 0x80	; 128
 304:	f0 e0       	ldi	r31, 0x00	; 0
 306:	80 81       	ld	r24, Z
 308:	80 6a       	ori	r24, 0xA0	; 160
 30a:	80 83       	st	Z, r24
 30c:	80 81       	ld	r24, Z
 30e:	82 60       	ori	r24, 0x02	; 2
 310:	80 83       	st	Z, r24
 312:	e1 e8       	ldi	r30, 0x81	; 129
 314:	f0 e0       	ldi	r31, 0x00	; 0
 316:	80 81       	ld	r24, Z
 318:	88 61       	ori	r24, 0x18	; 24
 31a:	80 83       	st	Z, r24
 31c:	80 81       	ld	r24, Z
 31e:	81 60       	ori	r24, 0x01	; 1
 320:	80 83       	st	Z, r24
 322:	08 95       	ret

00000324 <MainScreenUpdate>:
 324:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <rotarystatus>
 328:	81 30       	cpi	r24, 0x01	; 1
 32a:	f1 f5       	brne	.+124    	; 0x3a8 <MainScreenUpdate+0x84>
 32c:	10 92 3c 01 	sts	0x013C, r1	; 0x80013c <rotarystatus>
 330:	0e 94 b2 00 	call	0x164	; 0x164 <lcd_write_instruction_4d>
 334:	8f e7       	ldi	r24, 0x7F	; 127
 336:	9e e3       	ldi	r25, 0x3E	; 62
 338:	01 97       	sbiw	r24, 0x01	; 1
 33a:	f1 f7       	brne	.-4      	; 0x338 <MainScreenUpdate+0x14>
 33c:	00 c0       	rjmp	.+0      	; 0x33e <MainScreenUpdate+0x1a>
 33e:	00 00       	nop
 340:	80 e8       	ldi	r24, 0x80	; 128
 342:	0e 94 b2 00 	call	0x164	; 0x164 <lcd_write_instruction_4d>
 346:	8f e3       	ldi	r24, 0x3F	; 63
 348:	91 e0       	ldi	r25, 0x01	; 1
 34a:	01 97       	sbiw	r24, 0x01	; 1
 34c:	f1 f7       	brne	.-4      	; 0x34a <MainScreenUpdate+0x26>
 34e:	00 c0       	rjmp	.+0      	; 0x350 <MainScreenUpdate+0x2c>
 350:	00 00       	nop
 352:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <__data_end>
 356:	88 23       	and	r24, r24
 358:	21 f0       	breq	.+8      	; 0x362 <MainScreenUpdate+0x3e>
 35a:	81 50       	subi	r24, 0x01	; 1
 35c:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <__data_end>
 360:	03 c0       	rjmp	.+6      	; 0x368 <MainScreenUpdate+0x44>
 362:	84 e6       	ldi	r24, 0x64	; 100
 364:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <__data_end>
 368:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <__data_end>
 36c:	0e 94 62 01 	call	0x2c4	; 0x2c4 <setPWM>
 370:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <__data_end>
 374:	4a e0       	ldi	r20, 0x0A	; 10
 376:	50 e0       	ldi	r21, 0x00	; 0
 378:	6b e3       	ldi	r22, 0x3B	; 59
 37a:	71 e0       	ldi	r23, 0x01	; 1
 37c:	90 e0       	ldi	r25, 0x00	; 0
 37e:	0e 94 d6 03 	call	0x7ac	; 0x7ac <itoa>
 382:	80 e0       	ldi	r24, 0x00	; 0
 384:	91 e0       	ldi	r25, 0x01	; 1
 386:	0e 94 80 00 	call	0x100	; 0x100 <lcd_write_string_4d>
 38a:	8b e3       	ldi	r24, 0x3B	; 59
 38c:	91 e0       	ldi	r25, 0x01	; 1
 38e:	0e 94 80 00 	call	0x100	; 0x100 <lcd_write_string_4d>
 392:	89 e1       	ldi	r24, 0x19	; 25
 394:	91 e0       	ldi	r25, 0x01	; 1
 396:	0e 94 80 00 	call	0x100	; 0x100 <lcd_write_string_4d>
 39a:	8f e3       	ldi	r24, 0x3F	; 63
 39c:	91 e0       	ldi	r25, 0x01	; 1
 39e:	01 97       	sbiw	r24, 0x01	; 1
 3a0:	f1 f7       	brne	.-4      	; 0x39e <MainScreenUpdate+0x7a>
 3a2:	00 c0       	rjmp	.+0      	; 0x3a4 <MainScreenUpdate+0x80>
 3a4:	00 00       	nop
 3a6:	08 95       	ret
 3a8:	82 30       	cpi	r24, 0x02	; 2
 3aa:	e9 f5       	brne	.+122    	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 3ac:	10 92 3c 01 	sts	0x013C, r1	; 0x80013c <rotarystatus>
 3b0:	81 e0       	ldi	r24, 0x01	; 1
 3b2:	0e 94 b2 00 	call	0x164	; 0x164 <lcd_write_instruction_4d>
 3b6:	8f e7       	ldi	r24, 0x7F	; 127
 3b8:	9e e3       	ldi	r25, 0x3E	; 62
 3ba:	01 97       	sbiw	r24, 0x01	; 1
 3bc:	f1 f7       	brne	.-4      	; 0x3ba <MainScreenUpdate+0x96>
 3be:	00 c0       	rjmp	.+0      	; 0x3c0 <MainScreenUpdate+0x9c>
 3c0:	00 00       	nop
 3c2:	80 e8       	ldi	r24, 0x80	; 128
 3c4:	0e 94 b2 00 	call	0x164	; 0x164 <lcd_write_instruction_4d>
 3c8:	8f e3       	ldi	r24, 0x3F	; 63
 3ca:	91 e0       	ldi	r25, 0x01	; 1
 3cc:	01 97       	sbiw	r24, 0x01	; 1
 3ce:	f1 f7       	brne	.-4      	; 0x3cc <MainScreenUpdate+0xa8>
 3d0:	00 c0       	rjmp	.+0      	; 0x3d2 <MainScreenUpdate+0xae>
 3d2:	00 00       	nop
 3d4:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <__data_end>
 3d8:	84 36       	cpi	r24, 0x64	; 100
 3da:	20 f4       	brcc	.+8      	; 0x3e4 <MainScreenUpdate+0xc0>
 3dc:	8f 5f       	subi	r24, 0xFF	; 255
 3de:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <__data_end>
 3e2:	02 c0       	rjmp	.+4      	; 0x3e8 <MainScreenUpdate+0xc4>
 3e4:	10 92 3a 01 	sts	0x013A, r1	; 0x80013a <__data_end>
 3e8:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <__data_end>
 3ec:	0e 94 62 01 	call	0x2c4	; 0x2c4 <setPWM>
 3f0:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <__data_end>
 3f4:	4a e0       	ldi	r20, 0x0A	; 10
 3f6:	50 e0       	ldi	r21, 0x00	; 0
 3f8:	6b e3       	ldi	r22, 0x3B	; 59
 3fa:	71 e0       	ldi	r23, 0x01	; 1
 3fc:	90 e0       	ldi	r25, 0x00	; 0
 3fe:	0e 94 d6 03 	call	0x7ac	; 0x7ac <itoa>
 402:	80 e0       	ldi	r24, 0x00	; 0
 404:	91 e0       	ldi	r25, 0x01	; 1
 406:	0e 94 80 00 	call	0x100	; 0x100 <lcd_write_string_4d>
 40a:	8b e3       	ldi	r24, 0x3B	; 59
 40c:	91 e0       	ldi	r25, 0x01	; 1
 40e:	0e 94 80 00 	call	0x100	; 0x100 <lcd_write_string_4d>
 412:	89 e1       	ldi	r24, 0x19	; 25
 414:	91 e0       	ldi	r25, 0x01	; 1
 416:	0e 94 80 00 	call	0x100	; 0x100 <lcd_write_string_4d>
 41a:	8f e3       	ldi	r24, 0x3F	; 63
 41c:	91 e0       	ldi	r25, 0x01	; 1
 41e:	01 97       	sbiw	r24, 0x01	; 1
 420:	f1 f7       	brne	.-4      	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 422:	00 c0       	rjmp	.+0      	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 424:	00 00       	nop
 426:	08 95       	ret

00000428 <ExtIntInit>:
 428:	80 ef       	ldi	r24, 0xF0	; 240
 42a:	8a b9       	out	0x0a, r24	; 10
 42c:	e8 98       	cbi	0x1d, 0	; 29
 42e:	e9 e6       	ldi	r30, 0x69	; 105
 430:	f0 e0       	ldi	r31, 0x00	; 0
 432:	80 81       	ld	r24, Z
 434:	83 60       	ori	r24, 0x03	; 3
 436:	80 83       	st	Z, r24
 438:	e0 98       	cbi	0x1c, 0	; 28
 43a:	e8 9a       	sbi	0x1d, 0	; 29
 43c:	08 95       	ret

0000043e <Timer2_Start>:
}
//start timer2
void Timer2_Start(void)
{
	TCCR2B|=(1<<CS22)|(1<<CS21)|(1<<CS20); //prescaler 256 ~122 interrupts/s
 43e:	e1 eb       	ldi	r30, 0xB1	; 177
 440:	f0 e0       	ldi	r31, 0x00	; 0
 442:	80 81       	ld	r24, Z
 444:	87 60       	ori	r24, 0x07	; 7
 446:	80 83       	st	Z, r24
	TIMSK2|=(1<<TOIE2);//Enable Timer0 Overflow interrupts
 448:	e0 e7       	ldi	r30, 0x70	; 112
 44a:	f0 e0       	ldi	r31, 0x00	; 0
 44c:	80 81       	ld	r24, Z
 44e:	81 60       	ori	r24, 0x01	; 1
 450:	80 83       	st	Z, r24
 452:	08 95       	ret

00000454 <LcdInit>:
}

void LcdInit(void)
{
	lcd_write_instruction_4d(lcd_SetCursor | lcd_LineOne);
 454:	80 e8       	ldi	r24, 0x80	; 128
 456:	0e 94 b2 00 	call	0x164	; 0x164 <lcd_write_instruction_4d>
	lcd_write_string_4d("Amplitude: 0%");
 45a:	8d e0       	ldi	r24, 0x0D	; 13
 45c:	91 e0       	ldi	r25, 0x01	; 1
 45e:	0e 94 80 00 	call	0x100	; 0x100 <lcd_write_string_4d>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 462:	8f e3       	ldi	r24, 0x3F	; 63
 464:	91 e0       	ldi	r25, 0x01	; 1
 466:	01 97       	sbiw	r24, 0x01	; 1
 468:	f1 f7       	brne	.-4      	; 0x466 <LcdInit+0x12>
 46a:	00 c0       	rjmp	.+0      	; 0x46c <LcdInit+0x18>
 46c:	00 00       	nop
	_delay_us(80);
	lcd_write_instruction_4d(lcd_SetCursor | lcd_LineTwo);
 46e:	80 ec       	ldi	r24, 0xC0	; 192
 470:	0e 94 b2 00 	call	0x164	; 0x164 <lcd_write_instruction_4d>
	lcd_write_string_4d("Frequentie: 0%");
 474:	8b e1       	ldi	r24, 0x1B	; 27
 476:	91 e0       	ldi	r25, 0x01	; 1
 478:	0e 94 80 00 	call	0x100	; 0x100 <lcd_write_string_4d>
 47c:	8f e3       	ldi	r24, 0x3F	; 63
 47e:	91 e0       	ldi	r25, 0x01	; 1
 480:	01 97       	sbiw	r24, 0x01	; 1
 482:	f1 f7       	brne	.-4      	; 0x480 <LcdInit+0x2c>
 484:	00 c0       	rjmp	.+0      	; 0x486 <LcdInit+0x32>
 486:	00 00       	nop
	_delay_us(80);
	lcd_write_instruction_4d(lcd_SetCursor | lcd_LineThree);
 488:	84 e9       	ldi	r24, 0x94	; 148
 48a:	0e 94 b2 00 	call	0x164	; 0x164 <lcd_write_instruction_4d>
	lcd_write_string_4d("Duty cycle: 0%");
 48e:	8a e2       	ldi	r24, 0x2A	; 42
 490:	91 e0       	ldi	r25, 0x01	; 1
 492:	0e 94 80 00 	call	0x100	; 0x100 <lcd_write_string_4d>
 496:	8f e3       	ldi	r24, 0x3F	; 63
 498:	91 e0       	ldi	r25, 0x01	; 1
 49a:	01 97       	sbiw	r24, 0x01	; 1
 49c:	f1 f7       	brne	.-4      	; 0x49a <LcdInit+0x46>
 49e:	00 c0       	rjmp	.+0      	; 0x4a0 <LcdInit+0x4c>
 4a0:	00 00       	nop
 4a2:	08 95       	ret

000004a4 <MainInit>:
}

void MainInit(void)
{
	//all B-pins to output
	DDRB = 0xFF;
 4a4:	8f ef       	ldi	r24, 0xFF	; 255
 4a6:	84 b9       	out	0x04, r24	; 4
	
	//init
	RotaryInit();
 4a8:	0e 94 2d 01 	call	0x25a	; 0x25a <RotaryInit>
	EIMSK |= (1 << INT0); //Enable INT0
}

void Timer2_Init(void)
{
	TCNT2=0x00;
 4ac:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7e00b2>
	DDRB = 0xFF;
	
	//init
	RotaryInit();
	Timer2_Init();
	Timer2_Start();
 4b0:	0e 94 1f 02 	call	0x43e	; 0x43e <Timer2_Start>
	ExtIntInit();
 4b4:	0e 94 14 02 	call	0x428	; 0x428 <ExtIntInit>
	
	//enable global interrupts
	sei();
 4b8:	78 94       	sei
		LcdInit();
 4ba:	0e 94 2a 02 	call	0x454	; 0x454 <LcdInit>
 4be:	08 95       	ret

000004c0 <main>:
}
int main(void)
{
	
// configure the microprocessor pins for the data lines
    lcd_D7_ddr |= (1<<lcd_D7_bit);                  // 4 data lines - output
 4c0:	57 9a       	sbi	0x0a, 7	; 10
    lcd_D6_ddr |= (1<<lcd_D6_bit);
 4c2:	56 9a       	sbi	0x0a, 6	; 10
    lcd_D5_ddr |= (1<<lcd_D5_bit);
 4c4:	55 9a       	sbi	0x0a, 5	; 10
    lcd_D4_ddr |= (1<<lcd_D4_bit);
 4c6:	54 9a       	sbi	0x0a, 4	; 10

// configure the microprocessor pins for the control lines
    lcd_E_ddr |= (1<<lcd_E_bit);                    // E line - output
 4c8:	25 9a       	sbi	0x04, 5	; 4
    lcd_RS_ddr |= (1<<lcd_RS_bit);                  // RS line - output
 4ca:	20 9a       	sbi	0x04, 0	; 4

// initialize the LCD controller as determined by the defines (LCD instructions)
    lcd_init_4d();                                  // initialize the LCD display for a 4-bit interface
 4cc:	0e 94 c7 00 	call	0x18e	; 0x18e <lcd_init_4d>

// set cursor to start of second line
    lcd_write_instruction_4d(lcd_SetCursor | lcd_LineTwo);
 4d0:	80 ec       	ldi	r24, 0xC0	; 192
 4d2:	0e 94 b2 00 	call	0x164	; 0x164 <lcd_write_instruction_4d>
 4d6:	8f e3       	ldi	r24, 0x3F	; 63
 4d8:	91 e0       	ldi	r25, 0x01	; 1
 4da:	01 97       	sbiw	r24, 0x01	; 1
 4dc:	f1 f7       	brne	.-4      	; 0x4da <main+0x1a>
 4de:	00 c0       	rjmp	.+0      	; 0x4e0 <main+0x20>
 4e0:	00 00       	nop
    _delay_us(80);                                  // 80 uS delay (min)
	
	MainInit();
 4e2:	0e 94 52 02 	call	0x4a4	; 0x4a4 <MainInit>
	
// endless loop
    while(1){
		//_delay_ms(100);
		MainScreenUpdate();
 4e6:	0e 94 92 01 	call	0x324	; 0x324 <MainScreenUpdate>
 4ea:	fd cf       	rjmp	.-6      	; 0x4e6 <main+0x26>

000004ec <__vector_1>:
	}
    return 0;
}

ISR(INT0_vect)
{
 4ec:	1f 92       	push	r1
 4ee:	0f 92       	push	r0
 4f0:	0f b6       	in	r0, 0x3f	; 63
 4f2:	0f 92       	push	r0
 4f4:	11 24       	eor	r1, r1
 4f6:	8f 93       	push	r24
 4f8:	9f 93       	push	r25
	PORTB ^= 0x04;
 4fa:	95 b1       	in	r25, 0x05	; 5
 4fc:	84 e0       	ldi	r24, 0x04	; 4
 4fe:	89 27       	eor	r24, r25
 500:	85 b9       	out	0x05, r24	; 5
}
 502:	9f 91       	pop	r25
 504:	8f 91       	pop	r24
 506:	0f 90       	pop	r0
 508:	0f be       	out	0x3f, r0	; 63
 50a:	0f 90       	pop	r0
 50c:	1f 90       	pop	r1
 50e:	18 95       	reti

00000510 <__vector_9>:

ISR(TIMER2_OVF_vect)
{
 510:	1f 92       	push	r1
 512:	0f 92       	push	r0
 514:	0f b6       	in	r0, 0x3f	; 63
 516:	0f 92       	push	r0
 518:	11 24       	eor	r1, r1
 51a:	2f 93       	push	r18
 51c:	3f 93       	push	r19
 51e:	4f 93       	push	r20
 520:	5f 93       	push	r21
 522:	6f 93       	push	r22
 524:	7f 93       	push	r23
 526:	8f 93       	push	r24
 528:	9f 93       	push	r25
 52a:	af 93       	push	r26
 52c:	bf 93       	push	r27
 52e:	ef 93       	push	r30
 530:	ff 93       	push	r31
	//reading rotary and button
	RotaryCheckStatus();
 532:	0e 94 34 01 	call	0x268	; 0x268 <RotaryCheckStatus>
}
 536:	ff 91       	pop	r31
 538:	ef 91       	pop	r30
 53a:	bf 91       	pop	r27
 53c:	af 91       	pop	r26
 53e:	9f 91       	pop	r25
 540:	8f 91       	pop	r24
 542:	7f 91       	pop	r23
 544:	6f 91       	pop	r22
 546:	5f 91       	pop	r21
 548:	4f 91       	pop	r20
 54a:	3f 91       	pop	r19
 54c:	2f 91       	pop	r18
 54e:	0f 90       	pop	r0
 550:	0f be       	out	0x3f, r0	; 63
 552:	0f 90       	pop	r0
 554:	1f 90       	pop	r1
 556:	18 95       	reti

00000558 <__fixunssfsi>:
 558:	0e 94 20 03 	call	0x640	; 0x640 <__fp_splitA>
 55c:	88 f0       	brcs	.+34     	; 0x580 <__fixunssfsi+0x28>
 55e:	9f 57       	subi	r25, 0x7F	; 127
 560:	98 f0       	brcs	.+38     	; 0x588 <__fixunssfsi+0x30>
 562:	b9 2f       	mov	r27, r25
 564:	99 27       	eor	r25, r25
 566:	b7 51       	subi	r27, 0x17	; 23
 568:	b0 f0       	brcs	.+44     	; 0x596 <__fixunssfsi+0x3e>
 56a:	e1 f0       	breq	.+56     	; 0x5a4 <__fixunssfsi+0x4c>
 56c:	66 0f       	add	r22, r22
 56e:	77 1f       	adc	r23, r23
 570:	88 1f       	adc	r24, r24
 572:	99 1f       	adc	r25, r25
 574:	1a f0       	brmi	.+6      	; 0x57c <__fixunssfsi+0x24>
 576:	ba 95       	dec	r27
 578:	c9 f7       	brne	.-14     	; 0x56c <__fixunssfsi+0x14>
 57a:	14 c0       	rjmp	.+40     	; 0x5a4 <__fixunssfsi+0x4c>
 57c:	b1 30       	cpi	r27, 0x01	; 1
 57e:	91 f0       	breq	.+36     	; 0x5a4 <__fixunssfsi+0x4c>
 580:	0e 94 3a 03 	call	0x674	; 0x674 <__fp_zero>
 584:	b1 e0       	ldi	r27, 0x01	; 1
 586:	08 95       	ret
 588:	0c 94 3a 03 	jmp	0x674	; 0x674 <__fp_zero>
 58c:	67 2f       	mov	r22, r23
 58e:	78 2f       	mov	r23, r24
 590:	88 27       	eor	r24, r24
 592:	b8 5f       	subi	r27, 0xF8	; 248
 594:	39 f0       	breq	.+14     	; 0x5a4 <__fixunssfsi+0x4c>
 596:	b9 3f       	cpi	r27, 0xF9	; 249
 598:	cc f3       	brlt	.-14     	; 0x58c <__fixunssfsi+0x34>
 59a:	86 95       	lsr	r24
 59c:	77 95       	ror	r23
 59e:	67 95       	ror	r22
 5a0:	b3 95       	inc	r27
 5a2:	d9 f7       	brne	.-10     	; 0x59a <__fixunssfsi+0x42>
 5a4:	3e f4       	brtc	.+14     	; 0x5b4 <__fixunssfsi+0x5c>
 5a6:	90 95       	com	r25
 5a8:	80 95       	com	r24
 5aa:	70 95       	com	r23
 5ac:	61 95       	neg	r22
 5ae:	7f 4f       	sbci	r23, 0xFF	; 255
 5b0:	8f 4f       	sbci	r24, 0xFF	; 255
 5b2:	9f 4f       	sbci	r25, 0xFF	; 255
 5b4:	08 95       	ret

000005b6 <__floatunsisf>:
 5b6:	e8 94       	clt
 5b8:	09 c0       	rjmp	.+18     	; 0x5cc <__floatsisf+0x12>

000005ba <__floatsisf>:
 5ba:	97 fb       	bst	r25, 7
 5bc:	3e f4       	brtc	.+14     	; 0x5cc <__floatsisf+0x12>
 5be:	90 95       	com	r25
 5c0:	80 95       	com	r24
 5c2:	70 95       	com	r23
 5c4:	61 95       	neg	r22
 5c6:	7f 4f       	sbci	r23, 0xFF	; 255
 5c8:	8f 4f       	sbci	r24, 0xFF	; 255
 5ca:	9f 4f       	sbci	r25, 0xFF	; 255
 5cc:	99 23       	and	r25, r25
 5ce:	a9 f0       	breq	.+42     	; 0x5fa <__floatsisf+0x40>
 5d0:	f9 2f       	mov	r31, r25
 5d2:	96 e9       	ldi	r25, 0x96	; 150
 5d4:	bb 27       	eor	r27, r27
 5d6:	93 95       	inc	r25
 5d8:	f6 95       	lsr	r31
 5da:	87 95       	ror	r24
 5dc:	77 95       	ror	r23
 5de:	67 95       	ror	r22
 5e0:	b7 95       	ror	r27
 5e2:	f1 11       	cpse	r31, r1
 5e4:	f8 cf       	rjmp	.-16     	; 0x5d6 <__floatsisf+0x1c>
 5e6:	fa f4       	brpl	.+62     	; 0x626 <__floatsisf+0x6c>
 5e8:	bb 0f       	add	r27, r27
 5ea:	11 f4       	brne	.+4      	; 0x5f0 <__floatsisf+0x36>
 5ec:	60 ff       	sbrs	r22, 0
 5ee:	1b c0       	rjmp	.+54     	; 0x626 <__floatsisf+0x6c>
 5f0:	6f 5f       	subi	r22, 0xFF	; 255
 5f2:	7f 4f       	sbci	r23, 0xFF	; 255
 5f4:	8f 4f       	sbci	r24, 0xFF	; 255
 5f6:	9f 4f       	sbci	r25, 0xFF	; 255
 5f8:	16 c0       	rjmp	.+44     	; 0x626 <__floatsisf+0x6c>
 5fa:	88 23       	and	r24, r24
 5fc:	11 f0       	breq	.+4      	; 0x602 <__floatsisf+0x48>
 5fe:	96 e9       	ldi	r25, 0x96	; 150
 600:	11 c0       	rjmp	.+34     	; 0x624 <__floatsisf+0x6a>
 602:	77 23       	and	r23, r23
 604:	21 f0       	breq	.+8      	; 0x60e <__floatsisf+0x54>
 606:	9e e8       	ldi	r25, 0x8E	; 142
 608:	87 2f       	mov	r24, r23
 60a:	76 2f       	mov	r23, r22
 60c:	05 c0       	rjmp	.+10     	; 0x618 <__floatsisf+0x5e>
 60e:	66 23       	and	r22, r22
 610:	71 f0       	breq	.+28     	; 0x62e <__floatsisf+0x74>
 612:	96 e8       	ldi	r25, 0x86	; 134
 614:	86 2f       	mov	r24, r22
 616:	70 e0       	ldi	r23, 0x00	; 0
 618:	60 e0       	ldi	r22, 0x00	; 0
 61a:	2a f0       	brmi	.+10     	; 0x626 <__floatsisf+0x6c>
 61c:	9a 95       	dec	r25
 61e:	66 0f       	add	r22, r22
 620:	77 1f       	adc	r23, r23
 622:	88 1f       	adc	r24, r24
 624:	da f7       	brpl	.-10     	; 0x61c <__floatsisf+0x62>
 626:	88 0f       	add	r24, r24
 628:	96 95       	lsr	r25
 62a:	87 95       	ror	r24
 62c:	97 f9       	bld	r25, 7
 62e:	08 95       	ret

00000630 <__fp_split3>:
 630:	57 fd       	sbrc	r21, 7
 632:	90 58       	subi	r25, 0x80	; 128
 634:	44 0f       	add	r20, r20
 636:	55 1f       	adc	r21, r21
 638:	59 f0       	breq	.+22     	; 0x650 <__fp_splitA+0x10>
 63a:	5f 3f       	cpi	r21, 0xFF	; 255
 63c:	71 f0       	breq	.+28     	; 0x65a <__fp_splitA+0x1a>
 63e:	47 95       	ror	r20

00000640 <__fp_splitA>:
 640:	88 0f       	add	r24, r24
 642:	97 fb       	bst	r25, 7
 644:	99 1f       	adc	r25, r25
 646:	61 f0       	breq	.+24     	; 0x660 <__fp_splitA+0x20>
 648:	9f 3f       	cpi	r25, 0xFF	; 255
 64a:	79 f0       	breq	.+30     	; 0x66a <__fp_splitA+0x2a>
 64c:	87 95       	ror	r24
 64e:	08 95       	ret
 650:	12 16       	cp	r1, r18
 652:	13 06       	cpc	r1, r19
 654:	14 06       	cpc	r1, r20
 656:	55 1f       	adc	r21, r21
 658:	f2 cf       	rjmp	.-28     	; 0x63e <__fp_split3+0xe>
 65a:	46 95       	lsr	r20
 65c:	f1 df       	rcall	.-30     	; 0x640 <__fp_splitA>
 65e:	08 c0       	rjmp	.+16     	; 0x670 <__fp_splitA+0x30>
 660:	16 16       	cp	r1, r22
 662:	17 06       	cpc	r1, r23
 664:	18 06       	cpc	r1, r24
 666:	99 1f       	adc	r25, r25
 668:	f1 cf       	rjmp	.-30     	; 0x64c <__fp_splitA+0xc>
 66a:	86 95       	lsr	r24
 66c:	71 05       	cpc	r23, r1
 66e:	61 05       	cpc	r22, r1
 670:	08 94       	sec
 672:	08 95       	ret

00000674 <__fp_zero>:
 674:	e8 94       	clt

00000676 <__fp_szero>:
 676:	bb 27       	eor	r27, r27
 678:	66 27       	eor	r22, r22
 67a:	77 27       	eor	r23, r23
 67c:	cb 01       	movw	r24, r22
 67e:	97 f9       	bld	r25, 7
 680:	08 95       	ret

00000682 <__mulsf3>:
 682:	0e 94 54 03 	call	0x6a8	; 0x6a8 <__mulsf3x>
 686:	0c 94 c5 03 	jmp	0x78a	; 0x78a <__fp_round>
 68a:	0e 94 b7 03 	call	0x76e	; 0x76e <__fp_pscA>
 68e:	38 f0       	brcs	.+14     	; 0x69e <__mulsf3+0x1c>
 690:	0e 94 be 03 	call	0x77c	; 0x77c <__fp_pscB>
 694:	20 f0       	brcs	.+8      	; 0x69e <__mulsf3+0x1c>
 696:	95 23       	and	r25, r21
 698:	11 f0       	breq	.+4      	; 0x69e <__mulsf3+0x1c>
 69a:	0c 94 ae 03 	jmp	0x75c	; 0x75c <__fp_inf>
 69e:	0c 94 b4 03 	jmp	0x768	; 0x768 <__fp_nan>
 6a2:	11 24       	eor	r1, r1
 6a4:	0c 94 3b 03 	jmp	0x676	; 0x676 <__fp_szero>

000006a8 <__mulsf3x>:
 6a8:	0e 94 18 03 	call	0x630	; 0x630 <__fp_split3>
 6ac:	70 f3       	brcs	.-36     	; 0x68a <__mulsf3+0x8>

000006ae <__mulsf3_pse>:
 6ae:	95 9f       	mul	r25, r21
 6b0:	c1 f3       	breq	.-16     	; 0x6a2 <__mulsf3+0x20>
 6b2:	95 0f       	add	r25, r21
 6b4:	50 e0       	ldi	r21, 0x00	; 0
 6b6:	55 1f       	adc	r21, r21
 6b8:	62 9f       	mul	r22, r18
 6ba:	f0 01       	movw	r30, r0
 6bc:	72 9f       	mul	r23, r18
 6be:	bb 27       	eor	r27, r27
 6c0:	f0 0d       	add	r31, r0
 6c2:	b1 1d       	adc	r27, r1
 6c4:	63 9f       	mul	r22, r19
 6c6:	aa 27       	eor	r26, r26
 6c8:	f0 0d       	add	r31, r0
 6ca:	b1 1d       	adc	r27, r1
 6cc:	aa 1f       	adc	r26, r26
 6ce:	64 9f       	mul	r22, r20
 6d0:	66 27       	eor	r22, r22
 6d2:	b0 0d       	add	r27, r0
 6d4:	a1 1d       	adc	r26, r1
 6d6:	66 1f       	adc	r22, r22
 6d8:	82 9f       	mul	r24, r18
 6da:	22 27       	eor	r18, r18
 6dc:	b0 0d       	add	r27, r0
 6de:	a1 1d       	adc	r26, r1
 6e0:	62 1f       	adc	r22, r18
 6e2:	73 9f       	mul	r23, r19
 6e4:	b0 0d       	add	r27, r0
 6e6:	a1 1d       	adc	r26, r1
 6e8:	62 1f       	adc	r22, r18
 6ea:	83 9f       	mul	r24, r19
 6ec:	a0 0d       	add	r26, r0
 6ee:	61 1d       	adc	r22, r1
 6f0:	22 1f       	adc	r18, r18
 6f2:	74 9f       	mul	r23, r20
 6f4:	33 27       	eor	r19, r19
 6f6:	a0 0d       	add	r26, r0
 6f8:	61 1d       	adc	r22, r1
 6fa:	23 1f       	adc	r18, r19
 6fc:	84 9f       	mul	r24, r20
 6fe:	60 0d       	add	r22, r0
 700:	21 1d       	adc	r18, r1
 702:	82 2f       	mov	r24, r18
 704:	76 2f       	mov	r23, r22
 706:	6a 2f       	mov	r22, r26
 708:	11 24       	eor	r1, r1
 70a:	9f 57       	subi	r25, 0x7F	; 127
 70c:	50 40       	sbci	r21, 0x00	; 0
 70e:	9a f0       	brmi	.+38     	; 0x736 <__mulsf3_pse+0x88>
 710:	f1 f0       	breq	.+60     	; 0x74e <__mulsf3_pse+0xa0>
 712:	88 23       	and	r24, r24
 714:	4a f0       	brmi	.+18     	; 0x728 <__mulsf3_pse+0x7a>
 716:	ee 0f       	add	r30, r30
 718:	ff 1f       	adc	r31, r31
 71a:	bb 1f       	adc	r27, r27
 71c:	66 1f       	adc	r22, r22
 71e:	77 1f       	adc	r23, r23
 720:	88 1f       	adc	r24, r24
 722:	91 50       	subi	r25, 0x01	; 1
 724:	50 40       	sbci	r21, 0x00	; 0
 726:	a9 f7       	brne	.-22     	; 0x712 <__mulsf3_pse+0x64>
 728:	9e 3f       	cpi	r25, 0xFE	; 254
 72a:	51 05       	cpc	r21, r1
 72c:	80 f0       	brcs	.+32     	; 0x74e <__mulsf3_pse+0xa0>
 72e:	0c 94 ae 03 	jmp	0x75c	; 0x75c <__fp_inf>
 732:	0c 94 3b 03 	jmp	0x676	; 0x676 <__fp_szero>
 736:	5f 3f       	cpi	r21, 0xFF	; 255
 738:	e4 f3       	brlt	.-8      	; 0x732 <__mulsf3_pse+0x84>
 73a:	98 3e       	cpi	r25, 0xE8	; 232
 73c:	d4 f3       	brlt	.-12     	; 0x732 <__mulsf3_pse+0x84>
 73e:	86 95       	lsr	r24
 740:	77 95       	ror	r23
 742:	67 95       	ror	r22
 744:	b7 95       	ror	r27
 746:	f7 95       	ror	r31
 748:	e7 95       	ror	r30
 74a:	9f 5f       	subi	r25, 0xFF	; 255
 74c:	c1 f7       	brne	.-16     	; 0x73e <__mulsf3_pse+0x90>
 74e:	fe 2b       	or	r31, r30
 750:	88 0f       	add	r24, r24
 752:	91 1d       	adc	r25, r1
 754:	96 95       	lsr	r25
 756:	87 95       	ror	r24
 758:	97 f9       	bld	r25, 7
 75a:	08 95       	ret

0000075c <__fp_inf>:
 75c:	97 f9       	bld	r25, 7
 75e:	9f 67       	ori	r25, 0x7F	; 127
 760:	80 e8       	ldi	r24, 0x80	; 128
 762:	70 e0       	ldi	r23, 0x00	; 0
 764:	60 e0       	ldi	r22, 0x00	; 0
 766:	08 95       	ret

00000768 <__fp_nan>:
 768:	9f ef       	ldi	r25, 0xFF	; 255
 76a:	80 ec       	ldi	r24, 0xC0	; 192
 76c:	08 95       	ret

0000076e <__fp_pscA>:
 76e:	00 24       	eor	r0, r0
 770:	0a 94       	dec	r0
 772:	16 16       	cp	r1, r22
 774:	17 06       	cpc	r1, r23
 776:	18 06       	cpc	r1, r24
 778:	09 06       	cpc	r0, r25
 77a:	08 95       	ret

0000077c <__fp_pscB>:
 77c:	00 24       	eor	r0, r0
 77e:	0a 94       	dec	r0
 780:	12 16       	cp	r1, r18
 782:	13 06       	cpc	r1, r19
 784:	14 06       	cpc	r1, r20
 786:	05 06       	cpc	r0, r21
 788:	08 95       	ret

0000078a <__fp_round>:
 78a:	09 2e       	mov	r0, r25
 78c:	03 94       	inc	r0
 78e:	00 0c       	add	r0, r0
 790:	11 f4       	brne	.+4      	; 0x796 <__fp_round+0xc>
 792:	88 23       	and	r24, r24
 794:	52 f0       	brmi	.+20     	; 0x7aa <__fp_round+0x20>
 796:	bb 0f       	add	r27, r27
 798:	40 f4       	brcc	.+16     	; 0x7aa <__fp_round+0x20>
 79a:	bf 2b       	or	r27, r31
 79c:	11 f4       	brne	.+4      	; 0x7a2 <__fp_round+0x18>
 79e:	60 ff       	sbrs	r22, 0
 7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fp_round+0x20>
 7a2:	6f 5f       	subi	r22, 0xFF	; 255
 7a4:	7f 4f       	sbci	r23, 0xFF	; 255
 7a6:	8f 4f       	sbci	r24, 0xFF	; 255
 7a8:	9f 4f       	sbci	r25, 0xFF	; 255
 7aa:	08 95       	ret

000007ac <itoa>:
 7ac:	45 32       	cpi	r20, 0x25	; 37
 7ae:	51 05       	cpc	r21, r1
 7b0:	20 f4       	brcc	.+8      	; 0x7ba <itoa+0xe>
 7b2:	42 30       	cpi	r20, 0x02	; 2
 7b4:	10 f0       	brcs	.+4      	; 0x7ba <itoa+0xe>
 7b6:	0c 94 e1 03 	jmp	0x7c2	; 0x7c2 <__itoa_ncheck>
 7ba:	fb 01       	movw	r30, r22
 7bc:	10 82       	st	Z, r1
 7be:	cb 01       	movw	r24, r22
 7c0:	08 95       	ret

000007c2 <__itoa_ncheck>:
 7c2:	bb 27       	eor	r27, r27
 7c4:	4a 30       	cpi	r20, 0x0A	; 10
 7c6:	31 f4       	brne	.+12     	; 0x7d4 <__itoa_ncheck+0x12>
 7c8:	99 23       	and	r25, r25
 7ca:	22 f4       	brpl	.+8      	; 0x7d4 <__itoa_ncheck+0x12>
 7cc:	bd e2       	ldi	r27, 0x2D	; 45
 7ce:	90 95       	com	r25
 7d0:	81 95       	neg	r24
 7d2:	9f 4f       	sbci	r25, 0xFF	; 255
 7d4:	0c 94 ed 03 	jmp	0x7da	; 0x7da <__utoa_common>

000007d8 <__utoa_ncheck>:
 7d8:	bb 27       	eor	r27, r27

000007da <__utoa_common>:
 7da:	fb 01       	movw	r30, r22
 7dc:	55 27       	eor	r21, r21
 7de:	aa 27       	eor	r26, r26
 7e0:	88 0f       	add	r24, r24
 7e2:	99 1f       	adc	r25, r25
 7e4:	aa 1f       	adc	r26, r26
 7e6:	a4 17       	cp	r26, r20
 7e8:	10 f0       	brcs	.+4      	; 0x7ee <__utoa_common+0x14>
 7ea:	a4 1b       	sub	r26, r20
 7ec:	83 95       	inc	r24
 7ee:	50 51       	subi	r21, 0x10	; 16
 7f0:	b9 f7       	brne	.-18     	; 0x7e0 <__utoa_common+0x6>
 7f2:	a0 5d       	subi	r26, 0xD0	; 208
 7f4:	aa 33       	cpi	r26, 0x3A	; 58
 7f6:	08 f0       	brcs	.+2      	; 0x7fa <__utoa_common+0x20>
 7f8:	a9 5d       	subi	r26, 0xD9	; 217
 7fa:	a1 93       	st	Z+, r26
 7fc:	00 97       	sbiw	r24, 0x00	; 0
 7fe:	79 f7       	brne	.-34     	; 0x7de <__utoa_common+0x4>
 800:	b1 11       	cpse	r27, r1
 802:	b1 93       	st	Z+, r27
 804:	11 92       	st	Z+, r1
 806:	cb 01       	movw	r24, r22
 808:	0c 94 06 04 	jmp	0x80c	; 0x80c <strrev>

0000080c <strrev>:
 80c:	dc 01       	movw	r26, r24
 80e:	fc 01       	movw	r30, r24
 810:	67 2f       	mov	r22, r23
 812:	71 91       	ld	r23, Z+
 814:	77 23       	and	r23, r23
 816:	e1 f7       	brne	.-8      	; 0x810 <strrev+0x4>
 818:	32 97       	sbiw	r30, 0x02	; 2
 81a:	04 c0       	rjmp	.+8      	; 0x824 <strrev+0x18>
 81c:	7c 91       	ld	r23, X
 81e:	6d 93       	st	X+, r22
 820:	70 83       	st	Z, r23
 822:	62 91       	ld	r22, -Z
 824:	ae 17       	cp	r26, r30
 826:	bf 07       	cpc	r27, r31
 828:	c8 f3       	brcs	.-14     	; 0x81c <strrev+0x10>
 82a:	08 95       	ret

0000082c <_exit>:
 82c:	f8 94       	cli

0000082e <__stop_program>:
 82e:	ff cf       	rjmp	.-2      	; 0x82e <__stop_program>
